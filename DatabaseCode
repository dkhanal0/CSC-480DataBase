-- Start DB Instantiation --

-- Start Lists DB Instantiation --
CREATE DATABASE Traveling_Groceries_Lists_DB;

CREATE TABLE Traveling_Groceries_Lists_DB.ShoppingLists(
	shoppingListID INT AUTO_INCREMENT,
userID VARCHAR(50) NOT NULL,
	listName VARCHAR(100) NOT NULL,
	listDateCreated DATETIME DEFAULT CURRENT_TIMESTAMP,
listPublicStatus VARCHAR(10) DEFAULT 'private', 
listShoppedFlag TINYINT DEFAULT 0,
shopperUserID VARCHAR(50) DEFAULT 'none',
PRIMARY KEY (shoppingListID)
);

CREATE TABLE Traveling_Groceries_Lists_DB.ShoppingListContents(
	shoppingListID INT NOT NULL,
	itemName VARCHAR(100) NOT NULL,
	quantityItem INT DEFAULT 1,
    itemNote VARCHAR(1000),
    shoppedTime DATETIME,
    itemMissedFlag TINYINT DEFAULT 0,
	PRIMARY KEY (shoppingListID, itemName),
	FOREIGN KEY (shoppingListID) 
		REFERENCES ShoppingLists (shoppingListID)
		ON DELETE CASCADE
);

CREATE TABLE Traveling_Groceries_Lists_DB.SharedShoppingLists(
	userID VARCHAR(50) NOT NULL,
	shoppingListID INT NOT NULL,
	PRIMARY KEY (userID, shoppingListID),
	FOREIGN KEY (shoppingListID)
		REFERENCES ShoppingLists (shoppingListID)
		ON DELETE CASCADE
);

-- Start Item and Nodes DB Instantiation --
CREATE DATABASE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB;
CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.Items (
  	itemName VARCHAR(100) NOT NULL,
 	itemDescription VARCHAR(1000) DEFAULT "None",
 	itemStockBool TINYINT DEFAULT 1,
  	saleBool TINYINT DEFAULT 0,
	picURI VARCHAR(500) DEFAULT "None",
  	PRIMARY KEY (itemName)
);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.PathFindingNodes(
	pathNodeID INT NOT NULL,
	northNodeID INT,
	northNodeDistance INT,
	eastNodeID INT,
	eastNodeDistance INT,
	southNodeID INT,
	southNodeDistance INT,
	westNodeID INT,
	westNodeDistance INT,
PRIMARY KEY(pathNodeID)
);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.Departments (
    	departmentID INT AUTO_INCREMENT,
    	departmentName VARCHAR(100) NOT NULL,
		PRIMARY KEY(departmentID)
);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.Stores (
	storeID INT AUTO_INCREMENT,
	storeName VARCHAR(100) NOT NULL,
	address VARCHAR(100) NOT NULL,
	storeLayoutPicLocationString VARCHAR (1000),
	PRIMARY KEY(storeID)

);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.Locations (
 	locationID INT AUTO_INCREMENT,
departmentID INT NOT NULL,
  	aisle INT DEFAULT 0,
 	rack INT DEFAULT 0,
  	shelf VARCHAR(10) DEFAULT "None",
  	side VARCHAR(10) DEFAULT "None",
  	PRIMARY KEY (locationID),
	FOREIGN KEY (departmentID)
		REFERENCES Departments (departmentID)
);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.ItemLocationAssociations (
	locationID INT NOT NULL,
	itemName VARCHAR(100) NOT NULL,
	PRIMARY KEY (locationID, itemName),
	FOREIGN KEY (locationID)
		REFERENCES Locations(locationID)
		ON DELETE CASCADE,
	FOREIGN KEY (itemName)
		REFERENCES Items(itemName)
		ON DELETE CASCADE
);

CREATE TABLE Traveling_Groceries_Nodes_Store_Info_And_Categories_DB.LocationPathNodeAssociation (
	locationID INT NOT NULL,
	pathNodeID INT NOT NULL,
	PRIMARY KEY (locationID, pathNodeID),
	FOREIGN KEY (locationID)
		REFERENCES Locations(locationID)
		ON DELETE CASCADE,
	FOREIGN KEY (pathNodeID)
		REFERENCES PathFindingNodes(pathNodeID)
		ON DELETE CASCADE

);

-- Start User and Login DB Instantiation --
CREATE DATABASE Traveling_Groceries_User_And_Login_DB;

CREATE TABLE Traveling_Groceries_User_And_Login_DB.Users (
	userID VARCHAR(50) NOT NULL,
	userType VARCHAR (30) NOT NULL,
	email VARCHAR(100),
	userShoppingBool TINYINT DEFAULT 0,
	shoppedItemsPerHour INT DEFAULT 0,
	PRIMARY KEY(userID)
);

-- End DB Instantiation --
